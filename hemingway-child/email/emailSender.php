<?php
#
# Email Sender
# 
# Sends emails to both the client and staff, 'client' and 'internal'.
# Reads from templates in ./emails/inlined, which can be generated by ./readEmail.php
# Can also read non-inlined, but those emails will not be be 'optimized' with inlined styling
# thus may not be totally consistant. 
# 
# ~April 05 2014
# 

require_once "../../../../wp-load.php"; # Adds wordpress functionality
require_once 'helpers.php'; # helper functions

# Serves content to the client and also ends the script
function endRequest($json, $redirect = '') {
	if ( $redirect ) {
		header("location: $redirect"); # Apparently php sends a 302 with this automatically
	} else {
		header("content-type: application/json");
		echo json_encode($json);
	}

	die();
}

$json = array( 'success' => false, 'error' => null );


$doEmail	= isset($doEmail)		? $doEmail		: true;
$useInlined	= isset($useInlined)	? $useInlined	: true;

# If redirect is set, redirect instead of serving json (ie. no javascript is needed)
# This should really be a valid redirect path or nothing
$redirect		= !empty($_POST['redirect']) ? $_POST['redirect'] : '';

$nowDate		= new DateTime( "now", new DateTimeZone("Australia/Queensland") );
$sentDateTime	= $nowDate->format("m-d-y H:i:s A");

#
# Cottonpark
#

$ltscPdfUrl			= "http://cottonparkestate.com/wp-content/uploads/2014/03/A-Quick-Guide-To-LTSC.pdf";
$cottonParkPdfUrl	= "http://cottonparkestate.com/wp-content/uploads/2014/03/COTTON-PARK.pdf";

$client_name		= $_POST['clientName'];
$client_email		= $_POST['clientEmail'];
$client_number		= $_POST['clientNumber'];
$client_message		= $_POST['clientMessage'];

if ( !isset($client_request) ) {
	// Check if Client Request was for Webinar or LTSC or Generic Request..
	$client_request				= 'generic';
	$client_requestWebinar		= $_POST['clientRequestWebinar'];
	$client_requestLtsc			= $_POST['clientRequestLTSC'];

	$client_requestCounter = 0;

	# Determine the type
	if ( $client_requestLtsc == 'yes' ) {
		$client_request = 'ltsc';
		++$client_requestCounter;
	}
	if ( $clientRequestWebinar != '' ) {
		$client_request = 'webinar';
		++$client_requestCounter;
	}
	if ( $client_requestCounter > 1 ) {
		$client_request = 'ltsc-webinar';
	}
}

# hold the buffer, include whatever, then releaseBuffer() to grab any content that would normally be echoed.
holdBuffer();

$templatePath = 'emails/';

if ( $useInlined ) {
	$templatePath = 'emails/inlined/';
}

# Client email

if ( $client_request == 'ltsc' ) { # LTSC ONLY
	$client_subject	= 'Here is Your Info Pack ON LTSC Contracts.';
	include $templatePath . 'ltsc.php';
} else
if ( $client_request == 'webinar' ) { # WEBINAR ONLY
	$client_subject = 'Congratulations! You have booked your exclsuive one-on-one LTSC Webinar.';
	include $templatePath . 'webinar.php';
} else
if ( $client_request == 'ltsc-webinar' ) { # WEBINAR & LTSC 
	$client_subject = 'Congratulations!! you have booked your LTSC Webinar.';
	include $templatePath . 'ltsc-webinar.php';
} else { # GENERIC
	$client_subject = 'Thank you for your interest in Cotton Park Estate.';
	include $templatePath . 'generic.php';
}

$client_body = releaseBuffer();

# Internal email

if ( ! isset($internal_email) ) $internal_email = "contact@cottonparkestate.com";

$internal_subject = strtoupper($client_request);

# Do the same as we did for $client_body
holdBuffer();
include'emails/internal.php';
$internal_body = releaseBuffer();



# TEST

$internal_email	=
$client_email	= 'sam.johnson@ariongroup.com.au';
$doEmail = false;
# TEST



$client_headers		= "mime-version: 1.0\r\n";
$client_headers		.= "content-type: text/html; charset=utf-8\r\n";

$internal_headers	= $client_headers;

$client_headers		.= "To:$client_email\r\n";
$client_headers		.= "From:$internal_email\r\n";

$internal_headers	.= "To:$internal_email\r\n";
$internal_headers	.= "From:$internal_email\r\n";

if ( $doEmail ) {
	# internal email
	mail($internal_email, $internal_subject, $internal_body, $internal_headers);

	# client email
	mail($client_email, $client_subject, $client_body, $client_headers);

	sleep(3); # I guess wait a bit so that the email is known to be sent? consider removing this.
}

$json['success'] = true;

endRequest($json, $redirect);

?>